version: '3.8'

# This that are currently being done
# 1 postgres_primary is the primary server or main server where all data with latency is saved.
# 2 pg-readers is the read replica which can handle all reads as it is in async stream replication with primary.(Sync or Async can be choosed currenlty async)
# 3 pgpool is the load balancer for reads which can be shared across multiple pg-readers
# 4 we can see load balancing in action when we run select command vs insert command and running `show POOL_BACKEND_STATS` in psql via lb. 

# Future:
# 1. Dynamically we can spool up readers with scale command, but the entries for them has to done inside load balancer(pgpool) is not currently automated.

services:
  # Primary PostgreSQL (Write & Read)
  # Docs https://hub.docker.com/r/bitnami/postgresql https://gist.github.com/JosimarCamargo/40f8636563c6e9ececf603e94c3affa7
  postgres_primary:
    image: bitnami/postgresql:latest
    container_name: postgres_primary
    restart: always
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_DATABASE=clone
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_PASSWORD=postgres
    depends_on:
      - pg-writer
    volumes:
      - ./data/pg-primary:/bitnami/postgresql
      - ./config/pg-primary/init-db/:/docker-entrypoint-initdb.d:ro
    networks:
      - internal

  # Writer H-scalled PostgreSQL
  pg-writer:
    image: bitnami/postgresql:latest
    container_name: pg-writer
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_WAL_LEVEL=logical
      - POSTGRESQL_DATABASE=clone
    networks:
      - internal
    volumes:
      - ./config/pg-writer/init-db/:/docker-entrypoint-initdb.d:ro

  # Reader H-Scalled PostgreSQL
  pg-readers:
    image: bitnami/postgresql:latest
    container_name: pg-readers
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgres_primary
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
    depends_on:
      - postgres_primary
    networks:
      - internal

  # Reader Load-Balancer
  pgpool:
    image: bitnami/pgpool:4
    container_name: pgpool
    restart: always
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:postgres_primary:5432:0,1:pg-readers:5432:1
      - PGPOOL_SR_CHECK_USER=repl_user
      - PGPOOL_SR_CHECK_PASSWORD=repl_password
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=postgres
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
    healthcheck:
      test: [ "CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres_primary
      - pg-readers
    networks:
      - internal

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: abc@abc.com
      PGADMIN_DEFAULT_PASSWORD: abc
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    networks:
      - internal

networks:
  internal:
    driver: bridge
